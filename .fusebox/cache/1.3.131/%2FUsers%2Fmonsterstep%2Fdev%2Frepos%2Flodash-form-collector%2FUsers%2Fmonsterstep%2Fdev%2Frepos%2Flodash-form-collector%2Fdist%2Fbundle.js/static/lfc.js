module.exports = { contents: "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar lfc = function lfc(form, options) {\n  var elements = form.elements;\n\n\n  var allProperties = _lodash2.default.chain(elements).map('name').compact().uniq().value();\n\n  var _elements = _lodash2.default.pick(elements, allProperties);\n\n  var data = {};\n\n  _lodash2.default.each(_elements, function (node, propName) {\n    if (_lodash2.default.isArrayLikeObject(node)) {\n      _lodash2.default.each(node, function (element, idx) {\n        return setData(element, idx + 1);\n      });\n    } else {\n      setData(node);\n    }\n  });\n\n  function setData(element, elementIdx) {\n\n    // console.dir(element)\n\n    var name = element.name,\n        type = element.type,\n        value = element.value,\n        checked = element.checked,\n        disabled = element.disabled,\n        multiple = element.multiple,\n        step = element.step,\n        dataset = element.dataset,\n        tagName = element.tagName,\n        parentNode = element.parentNode;\n    var number = dataset.number;\n\n\n    var parentNodeAllowMultiple = parentNode.multiple;\n\n    if (disabled) return;\n\n    var fieldName = elementIdx ? name + '[' + (elementIdx - 1) + ']' : name;\n\n    if (_lodash2.default.includes(['text', 'password', 'textarea', 'email', 'url', 'tel', 'hidden', 'color', 'month', 'week', 'time'], type)) {\n      value && _lodash2.default.set(data, fieldName, _lodash2.default.trim(value));\n    }\n\n    if (_lodash2.default.includes(['number', 'range'], type)) {\n      var _step = element.step;\n\n      var decimal = _step ? _step.split('.')[1].length : 0;\n      value && _lodash2.default.set(data, fieldName, _step ? _lodash2.default.round(value, decimal) : parseInt(value));\n    }\n\n    if (_lodash2.default.includes(['radio'], type) && checked) {\n      value && _lodash2.default.set(data, name, value);\n    }\n\n    if (_lodash2.default.includes(['checkbox'], type) && !elementIdx) {\n      _lodash2.default.get(dataset, 'boolean') ? _lodash2.default.set(data, name, checked ? true : false) : checked && _lodash2.default.set(data, name, value);\n    }\n\n    if (_lodash2.default.includes(['checkbox'], type) && elementIdx) {\n      var existValues = _lodash2.default.get(data, name);\n      if (_lodash2.default.get(dataset, 'boolean')) {\n        _lodash2.default.set(data, name, checked ? existValues ? _lodash2.default.concat(existValues, true) : [true] : existValues ? _lodash2.default.concat(existValues, false) : [false]);\n      } else {\n        checked && _lodash2.default.set(data, name, existValues ? _lodash2.default.concat(existValues, value) : [value]);\n      }\n    }\n\n    if (_lodash2.default.includes(['date', 'datetime-local'], type)) {\n      var string = dataset.string;\n\n      value && _lodash2.default.set(data, fieldName, string ? new Date(value).toISOString() : new Date(value));\n    }\n\n    if (tagName === 'OPTION' && parentNode.tagName === 'SELECT' && !parentNodeAllowMultiple) {\n      var to = parentNode.dataset.type;\n      var _name = parentNode.name;\n      var _value = parentNode.value;\n      _value && _lodash2.default.set(data, _name, to ? convert({ to: to, value: value }) : _lodash2.default.trim(value));\n    }\n\n    if (tagName === 'OPTION' && parentNode.tagName === 'SELECT' && parentNodeAllowMultiple) {\n      var _value2 = [];\n\n      _lodash2.default.each(parentNode.selectedOptions, function (option) {\n        _value2.push(convert({ to: parentNode.dataset.type, value: option.value }));\n      });\n\n      _lodash2.default.set(data, parentNode.name, _value2);\n    }\n  }\n\n  return data;\n};\n\nfunction convert(_ref) {\n  var to = _ref.to,\n      value = _ref.value,\n      decimal = _ref.decimal,\n      _ref$separator = _ref.separator,\n      separator = _ref$separator === undefined ? ',' : _ref$separator;\n\n\n  var type = {\n    number: function number() {\n      return _lodash2.default.round(value, decimal);\n    },\n    string: function string() {\n      return _lodash2.default.trim(value);\n    },\n    array: function array() {\n      return value.join(separator);\n    }\n  };\n\n  return type[to](value);\n}\n\nexports.default = lfc;",
dependencies: ["lodash"],
sourceMap: {},
headerContent: undefined,
mtime: 1492512240000
};